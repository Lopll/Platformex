local speed = 200 
local movement_direction = vmath.vector3(0, 0, 0)

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#camera", "acquire_camera_focus")
	msg.post("@render:", "use_camera_projection")
end

function final(self)
	msg.post(".", "release_input_focus")
	msg.post("#camera", "release_camera_focus")
end

function update(self, dt)
	go.set_position(go.get_position() + movement_direction * dt * speed)
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)

end

local movement_directions = {
	[hash("Up")] = vmath.vector3(0, 1, 0),
	[hash("Down")] = vmath.vector3(0, -1, 0),
	[hash("Left")] = vmath.vector3(-1, 0, 0),
	[hash("Right")] = vmath.vector3(1, 0, 0)
}

function on_input(self, action_id, action)
	if action.pressed then
		movement_direction = movement_directions[action_id]
		if movement_direction == nil then
			movement_direction = vmath.vector3()
			-- здесь проверка на клик
		end
	elseif action.released then
		movement_direction = vmath.vector3()
	end
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
